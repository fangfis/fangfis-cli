#!/usr/bin/env node

const program = require('commander');
const chalk = require('chalk');

const pkg = require('../package.json');
const version = pkg.version;

program
    .version(version, '    --version')
    .usage('[options] [dir]');
    // .option('-i, --init', 'Generate a new project')

program
    .usage('<command>');

program
    .command('init')
    .description('Generate a new project')
    .alias('i')
    .action(() => {
        require('../command/init')();
    }).on('--help', function () {
        console.log(chalk.green('  Examples: '));
        console.log(chalk.green('           fang init -t'));
        console.log(chalk.green('           fang init -h'));
    });

program
    .command('build')
    .description('build the project')
    .alias('b')
    .action((env, options) => {
        require('../command/build')(options);
    }).on('--help', function () {
        console.log(chalk.green('  Examples: '));
        console.log(chalk.green('           fang init -t'));
        console.log(chalk.green('           fang init -h'));
    });


program.on('--help', function () {
    console.log('');
    console.log(chalk.green('  Examples:'));
    console.log(chalk.green('    fangfis init  Create the necessary directory structure'));
    console.log(chalk.green('    fangfis bulid [-w] -w: Monitor the current project file changes and build them automatically'));
    console.log('');
    console.log(chalk.yellow('  Please contact me if you have any questions. '));
    console.log(chalk.yellow('  mail: yueyanlei@fang.com '));
});
program.parse(process.argv);

if (!program.args.length) {
    program.help();
}

